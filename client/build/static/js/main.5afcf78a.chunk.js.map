{"version":3,"sources":["components/Home.js","components/Combatants.js","components/CombatSelect.js","components/Combat.js","components/Roll.js","App.js","reportWebVitals.js","index.js"],"names":["Home","state","title","body","posts","componentDidMount","getBlogPost","axios","get","then","response","data","setState","console","log","catch","alert","handleChange","target","name","value","submit","event","preventDefault","payload","url","method","resetUserInputs","displayBlogPost","length","map","post","index","this","onSubmit","className","type","placeholder","onChange","cols","rows","React","Component","Combatants","strength","dexterity","constitution","intelligence","wisdom","charisma","initiative","max_hp","armor_class","passive_perception","combatantType","getCombatant","displayCombatants","checked","handleRadioButton","CombatSelect","num","fighters","i","push","k","window","location","href","redirect","_id","min","step","items","item","Combat","getBattle","search","props","params","URLSearchParams","IDFromURL","Object","fromEntries","entries","tempArray","sort","firstItem","secondItem","roll","spacePress","onKeyPress","Roll","auto","getRoll","fighter_id","Number","Math","floor","random","battle_id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEMA,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,KAAM,GACNC,MAAO,I,EAGTC,kBAAoB,WAClB,EAAKC,e,EAGPA,YAAc,WACZC,IAAMC,IAAI,QACTC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtB,EAAKC,SAAS,CAACR,MAAMO,IACrBE,QAAQC,IAAI,YAAcH,GAC1BE,QAAQC,IAAI,gCAEbC,OAAM,WACLC,MAAM,gC,EAQVC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,EAAKR,SAAL,eACGO,EAAOC,K,EAGZC,OAAS,SAACC,GACRA,EAAMC,iBACN,IAAMC,EAAU,CACdtB,MAAO,EAAKD,MAAMC,MAClBC,KAAM,EAAKF,MAAME,MAGnBI,IAAM,CACJkB,IAAK,YACLC,OAAQ,OACRf,KAAMa,IAEPf,MAAK,WACJI,QAAQC,IAAI,oCACZ,EAAKa,kBACL,EAAKrB,iBAENS,OAAM,WACLF,QAAQC,IAAI,6B,EAMhBa,gBAAkB,WAChB,EAAKf,SAAS,CACZV,MAAO,GACPC,KAAM,M,EAIVyB,gBAAkB,SAACxB,GACjB,OAAKA,EAAMyB,OACJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,gCACE,6BAAKD,EAAK7B,QACV,4BAAI6B,EAAK5B,SAFD6B,MAFc,M,4CAS5B,WAGE,OAFAnB,QAAQC,IAAI,UAAWmB,KAAKhC,OAG1B,gCACE,mDACA,uBAAMiC,SAAUD,KAAKZ,OAArB,UACE,qBAAKc,UAAU,aAAf,SACE,uBACAC,KAAK,OACLjB,KAAK,QACLkB,YAAY,QACZjB,MAAOa,KAAKhC,MAAMC,MAClBoC,SAAUL,KAAKhB,iBAGjB,qBAAKkB,UAAU,aAAf,SACE,0BACAE,YAAY,OACZlB,KAAK,OACLoB,KAAK,KACLC,KAAK,KACLpB,MAAOa,KAAKhC,MAAME,KAClBmC,SAAUL,KAAKhB,iBAGjB,+CAEA,qBAAKkB,UAAU,YAAf,SACGF,KAAKL,gBAAgBK,KAAKhC,MAAMG,gB,GAzG9BqC,IAAMC,WA+GV1C,IC/GT2C,E,4MACF1C,MAAQ,CACJkB,KAAM,GACNyB,SAAU,EACVC,UAAW,EACXC,aAAc,EACdC,aAAc,EACdC,OAAQ,EACRC,SAAU,EACVC,WAAY,EACZC,OAAQ,EACRC,YAAa,EACbC,mBAAoB,EACpBC,cAAe,GACflD,MAAO,I,EAGTC,kBAAoB,WAElB,EAAKkD,gB,EAGPA,aAAe,WACbhD,IAAMC,IAAI,uBACTC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtB,EAAKC,SAAS,CAACR,MAAMO,IACrBE,QAAQC,IAAI,YAAcH,GAC1BE,QAAQC,IAAI,gCAEbC,OAAM,WACLC,MAAM,gC,EAIVC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,EAAKR,SAAL,eACGO,EAAOC,K,EAQZC,OAAS,SAACC,GACRA,EAAMC,iBACN,IAAMC,EAAU,CACdL,KAAM,EAAKlB,MAAMkB,KACjByB,SAAU,EAAK3C,MAAM2C,SACrBC,UAAW,EAAK5C,MAAM4C,UACtBC,aAAc,EAAK7C,MAAM6C,aACzBC,aAAc,EAAK9C,MAAM8C,aACzBC,OAAQ,EAAK/C,MAAM+C,OACnBC,SAAU,EAAKhD,MAAMgD,SACrBC,WAAY,EAAKjD,MAAMiD,WACvBC,OAAQ,EAAKlD,MAAMkD,OACnBC,YAAa,EAAKnD,MAAMmD,YACxBC,mBAAoB,EAAKpD,MAAMoD,mBAC/BC,cAAe,EAAKrD,MAAMqD,eAG5B/C,IAAM,CACJkB,IAAK,qBACLC,OAAQ,OACRf,KAAMa,IAEPf,MAAK,WACJI,QAAQC,IAAI,oCACZ,EAAKa,kBACL,EAAK4B,kBAENxC,OAAM,WACLF,QAAQC,IAAI,6B,EAMhBa,gBAAkB,WAChB,EAAKf,SAAS,CACVO,KAAM,GACNyB,SAAU,EACVC,UAAW,EACXC,aAAc,EACdC,aAAc,EACdC,OAAQ,EACRC,SAAU,EACVC,WAAY,EACZC,OAAQ,EACRC,YAAa,EACbC,mBAAoB,EACpBC,cAAe,M,EAIrBE,kBAAoB,SAACpD,GACnB,OAAKA,EAAMyB,OACJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,gCACE,wCAAWD,EAAKZ,QAChB,2CAAcY,EAAKa,YACnB,4CAAeb,EAAKc,aACpB,+CAAkBd,EAAKe,gBACvB,+CAAkBf,EAAKgB,gBACvB,yCAAYhB,EAAKiB,UACjB,2CAAcjB,EAAKkB,YACnB,6CAAgBlB,EAAKmB,cACrB,yCAAYnB,EAAKoB,UACjB,8CAAiBpB,EAAKqB,eACtB,qDAAwBrB,EAAKsB,sBAC7B,iDAAoBtB,EAAKuB,mBAZjBtB,MAFc,M,uDAzD5B,SAAkBZ,GAChBa,KAAKrB,SAAS,CACZ0C,cAAelC,M,oBA0EnB,WAAU,IAAD,OAGP,OAFAP,QAAQC,IAAI,UAAWmB,KAAKhC,OAG1B,gCACE,qDACA,uBAAMiC,SAAUD,KAAKZ,OAArB,UACE,sBAAKc,UAAU,aAAf,mBACQ,uBACNC,KAAK,OACLjB,KAAK,OACLkB,YAAY,OACZjB,MAAOa,KAAKhC,MAAMkB,KAClBmB,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,uBACY,uBACVC,KAAK,SACLjB,KAAK,WACLkB,YAAY,WACZjB,MAAOa,KAAKhC,MAAM2C,SAClBN,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,wBACa,uBACXC,KAAK,SACLjB,KAAK,YACLkB,YAAY,YACZjB,MAAOa,KAAKhC,MAAM4C,UAClBP,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,2BACgB,uBACdC,KAAK,SACLjB,KAAK,eACLkB,YAAY,eACZjB,MAAOa,KAAKhC,MAAM6C,aAClBR,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,2BACgB,uBACdC,KAAK,SACLjB,KAAK,eACLkB,YAAY,eACZjB,MAAOa,KAAKhC,MAAM8C,aAClBT,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,qBACU,uBACRC,KAAK,SACLjB,KAAK,SACLkB,YAAY,SACZjB,MAAOa,KAAKhC,MAAM+C,OAClBV,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,uBACY,uBACVC,KAAK,SACLjB,KAAK,WACLkB,YAAY,WACZjB,MAAOa,KAAKhC,MAAMgD,SAClBX,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,0BACe,uBACbC,KAAK,SACLjB,KAAK,aACLkB,YAAY,aACZjB,MAAOa,KAAKhC,MAAMiD,WAClBZ,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,qBACU,uBACRC,KAAK,SACLjB,KAAK,SACLkB,YAAY,SACZjB,MAAOa,KAAKhC,MAAMkD,OAClBb,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,0BACe,uBACbC,KAAK,SACLjB,KAAK,cACLkB,YAAY,cACZjB,MAAOa,KAAKhC,MAAMmD,YAClBd,SAAUL,KAAKhB,kBAGjB,sBAAKkB,UAAU,aAAf,iCACsB,uBACpBC,KAAK,SACLjB,KAAK,qBACLkB,YAAY,qBACZjB,MAAOa,KAAKhC,MAAMoD,mBAClBf,SAAUL,KAAKhB,kBAGjB,qBAAKkB,UAAU,QAAf,SACI,kCACI,uBACAC,KAAK,QACLhB,MAAOa,KAAKhC,MAAMqD,cAClBG,QAAsC,WAA7BxB,KAAKhC,MAAMqD,cACpBhB,SAAU,kBAAM,EAAKoB,kBAAkB,aAL3C,cAUJ,qBAAKvB,UAAU,QAAf,SACI,kCACI,uBACAC,KAAK,QACLhB,MAAOa,KAAKhC,MAAMqD,cAClBG,QAAsC,YAA7BxB,KAAKhC,MAAMqD,cACpBhB,SAAU,kBAAM,EAAKoB,kBAAkB,cAL3C,eAUJ,+CAEA,qBAAKvB,UAAU,aAAf,SACGF,KAAKuB,kBAAkBvB,KAAKhC,MAAMG,gB,GAzP1BqC,IAAMC,WA+PhBC,I,gBC/PTgB,E,4MAEF1D,MAAQ,CACJ2D,IAAK,GACLC,SAAU,GACVzD,MAAO,I,EAGTC,kBAAoB,WAClB,EAAKkD,gB,EAIPA,aAAe,WACbhD,IAAMC,IAAI,uBACTC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtB,EAAKC,SAAS,CAACR,MAAMO,IACrB,IAAK,IAAImD,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IAC3C,EAAK7D,MAAM2D,IAAIG,KAAK,GAEtBlD,QAAQC,IAAI,gCAEbC,OAAM,WACLC,MAAM,gC,EAcVK,OAAS,SAACC,GACRA,EAAMC,iBACNV,QAAQC,IAAI,EAAKb,MAAM2D,KACvB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IAC3C,GAAG,EAAK7D,MAAM2D,IAAIE,GAAK,EACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAK/D,MAAM2D,IAAIE,GAAIE,IACrC,EAAK/D,MAAM4D,SAASE,KAAK,EAAK9D,MAAMG,MAAM0D,IAIhD,IAAMtC,EAAU,CACdqC,SAAU,EAAK5D,MAAM4D,UAGvBtD,IAAM,CACJkB,IAAK,kBACLC,OAAQ,OACRf,KAAMa,IAEPf,MAAK,SAACC,GACLuD,OAAOC,SAASC,KAAOzD,EAASC,KAAKyD,SAAd,UAA4B1D,EAASC,KAAK0D,KACjExD,QAAQC,IAAI,uCAIbC,OAAM,WACLF,QAAQC,IAAI,6B,EAMhBa,gBAAkB,WAChB,EAAKf,SAAS,CACZgD,IAAK,GACLC,SAAU,M,EAGdL,kBAAoB,SAACpD,GACnB,OAAKA,EAAMyB,OACJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,+BACE,6BAAKD,EAAKZ,OACV,6BAAKY,EAAKa,WACV,6BAAKb,EAAKc,YACV,6BAAKd,EAAKe,eACV,6BAAKf,EAAKgB,eACV,6BAAKhB,EAAKiB,SACV,6BAAKjB,EAAKkB,WACV,6BAAKlB,EAAKmB,aACV,6BAAKnB,EAAKoB,SACV,6BAAKpB,EAAKqB,cACV,6BAAKrB,EAAKsB,qBACV,6BAAKtB,EAAKuB,gBACV,6BACE,qBAAKnB,UAAU,aAAf,SACE,uBACEC,KAAK,SACLjB,KAAK,WACLmD,IAAI,IACJC,KAAK,IACLlC,YAAY,IACZjB,MAAS,EAAKnB,MAAM2D,IAAI5B,IAAU,GAClCM,SAAU,SAAChB,GAAD,OAAW,EAAKL,aAAaK,EAAOU,YAtB7CA,MAFe,M,kDAjD5B,SAAaV,EAAOU,GAGlB,IAAIwC,EAAK,YAAOvC,KAAKhC,MAAM2D,KACvBa,EAAI,eAAOD,EAAMxC,IACrByC,EAAOnD,EAAMJ,OAAOE,MACpBoD,EAAMxC,GAAOyC,EACbxC,KAAKrB,SAAS,CAACgD,IAAIY,M,oBA6ErB,WAGE,OAFA3D,QAAQC,IAAI,UAAWmB,KAAKhC,OAGhC,qBAAKkC,UAAU,mBAAf,SACE,uBAAMD,SAAUD,KAAKZ,OAArB,UACE,kCACI,gCACI,+BACI,sCACA,0CACA,2CACA,8CACA,8CACA,wCACA,0CACA,4CACA,wCACA,6CACA,oDACA,qDAGR,gCACGY,KAAKuB,kBAAkBvB,KAAKhC,MAAMG,YAGzC,qD,GA3ImBqC,IAAMC,WAiJlBiB,IChJTe,E,4MAEFzE,MAAQ,CACJ2D,IAAK,GACLC,SAAU,GACVzD,MAAO,I,EAGTC,kBAAoB,WAClB,EAAKsE,a,EAIPA,UAAY,WACV,IAAMC,EAAS,EAAKC,MAAMX,SAASU,OAC7BE,EAAS,IAAIC,gBAAgBH,GAC7BI,EAAYC,OAAOC,YAAYJ,EAAOK,WAC5C5E,IAAMC,IAAI,cAAe,CACrBsE,OAAQ,CACJT,IAAKW,EAAUX,OAGtB5D,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtB,EAAKC,SAAS,CAACR,MAAMO,IACrB,EAAKC,SAAS,CAACiD,SAASlD,EAAKkD,WAE7BhD,QAAQC,IAAI,EAAKb,MAAMG,OACvBS,QAAQC,IAAI,EAAKb,MAAM4D,UAEvB,IAAIuB,EAAY,EAAKnF,MAAM4D,SAC3B,EAAKjD,SAAS,CAACiD,SAASuB,EAAUC,MAAK,SAACC,EAAWC,GAAZ,OAA2BA,EAAWC,KAAOF,EAAUE,UAC9F,IAAK,IAAI1B,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IAC3C,EAAK7D,MAAM2D,IAAIG,KAAK,GAEtBlD,QAAQC,IAAI,gCAEbC,OAAM,WACLC,MAAM,gC,EAcVK,OAAS,SAACC,GACRA,EAAMC,iBAEN,IAAK,IAAIuC,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IAC3C,GAAG,EAAK7D,MAAM2D,IAAIE,GAAK,EACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAK/D,MAAM2D,IAAIE,GAAIE,IACrC,EAAK/D,MAAM4D,SAASE,KAAK,EAAK9D,MAAMG,MAAM0D,IAIhD,IAAMtC,EAAU,CACdqC,SAAU,EAAK5D,MAAM4D,UAGvBtD,IAAM,CACJkB,IAAK,kBACLC,OAAQ,OACRf,KAAMa,IAEPf,MAAK,WACJI,QAAQC,IAAI,oCACZ,EAAKa,kBACL,EAAK4B,kBAENxC,OAAM,WACLF,QAAQC,IAAI,6B,EAMhB2E,WAAa,SAACnE,GACZA,EAAMC,kB,EAIRI,gBAAkB,WAChB,EAAKf,SAAS,CACZgD,IAAK,GACLC,SAAU,M,EAGdL,kBAAoB,SAACpD,GACnB,OAAKA,EAAMyB,OACJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,qBAAiB0D,WAAY,EAAKD,WAAlC,UACE,6BAAK1D,EAAKZ,OACV,6BAAKY,EAAKyD,SAFHxD,MAFe,M,kDArD5B,SAAaV,EAAOU,GAGlB,IAAIwC,EAAK,YAAOvC,KAAKhC,MAAM2D,KACvBa,EAAI,eAAOD,EAAMxC,IACrByC,EAAOnD,EAAMJ,OAAOE,MACpBoD,EAAMxC,GAAOyC,EACbxC,KAAKrB,SAAS,CAACgD,IAAIY,M,oBA0DrB,WAGE,OAFA3D,QAAQC,IAAI,UAAWmB,KAAKhC,OAGhC,qBAAKkC,UAAU,mBAAf,SACE,iCACE,kCACI,gCACI,+BACI,sCACA,iDAGR,gCACGF,KAAKuB,kBAAkBvB,KAAKhC,MAAM4D,eAGzC,qD,GA5HapB,IAAMC,WAkIZgC,ICnITiB,E,4MAEF1F,MAAQ,CACJ2D,IAAK,GACLC,SAAU,GACVzD,MAAO,GACPwF,KAAM,I,EAGRvF,kBAAoB,WAClB,EAAKwF,W,EAIPA,QAAU,WACR,IAAMjB,EAAS,EAAKC,MAAMX,SAASU,OAC7BE,EAAS,IAAIC,gBAAgBH,GAC7BI,EAAYC,OAAOC,YAAYJ,EAAOK,WAC5C5E,IAAMC,IAAI,YAAa,CACvBsE,OAAQ,CACJT,IAAKW,EAAUX,OAElB5D,MAAK,SAACC,GACP,IAAMC,EAAOD,EAASC,KACpB,EAAKC,SAAS,CAACR,MAAMO,EAAKkD,WAC1BhD,QAAQC,IAAI,EAAKb,MAAMG,OACvB,IAAK,IAAI0D,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IAC3C,EAAK7D,MAAM2D,IAAIG,KAAK,GACqB,YAAtC,EAAK9D,MAAMG,MAAM0D,GAAGR,cACnB,EAAKrD,MAAM2F,KAAK7B,MAAK,GAErB,EAAK9D,MAAM2F,KAAK7B,MAAK,GAG3BlD,QAAQC,IAAI,EAAKb,MAAM2F,MACvB/E,QAAQC,IAAI,iC,EAiBhBO,OAAS,SAACC,GACRA,EAAMC,iBACN,IAAK,IAAIuC,EAAI,EAAGA,EAAI,EAAK7D,MAAMG,MAAMyB,OAAQiC,IACzC,GAAI,EAAK7D,MAAM2D,IAAIE,GAAK,EACpB,EAAK7D,MAAM4D,SAASE,KAAK,CACrB+B,WAAY,EAAK7F,MAAMG,MAAM0D,GAAGO,IAChClD,KAAM,EAAKlB,MAAMG,MAAM0D,GAAG3C,KAC1BqE,KAAMO,OAAO,EAAK9F,MAAM2D,IAAIE,UAE7B,CACH,IAAI0B,EAAO,EAAKvF,MAAMG,MAAM0D,GAAGZ,WAAa8C,KAAKC,MAAqB,GAAfD,KAAKE,UAAgB,EAC5E,EAAKjG,MAAM4D,SAASE,KAAK,CACrB+B,WAAY,EAAK7F,MAAMG,MAAM0D,GAAGO,IAChClD,KAAM,EAAKlB,MAAMG,MAAM0D,GAAG3C,KAC1BqE,KAAMA,IAKlB,IAAMZ,EAAS,EAAKC,MAAMX,SAASU,OAC7BE,EAAS,IAAIC,gBAAgBH,GAC7BI,EAAYC,OAAOC,YAAYJ,EAAOK,WACtC3D,EAAU,CACZqC,SAAU,EAAK5D,MAAM4D,SACrBsC,UAAWnB,EAAUX,KAGzB9D,IAAM,CACJkB,IAAK,gBACLC,OAAQ,OACRf,KAAMa,IAEPf,MAAK,SAACC,GACHuD,OAAOC,SAASC,KAAOzD,EAASC,KAAKyD,SAAd,UAA4B1D,EAASC,KAAK0D,KACnExD,QAAQC,IAAI,uCAIbC,OAAM,WACLF,QAAQC,IAAI,6B,EAKhBa,gBAAkB,WAChB,EAAKf,SAAS,CACZgD,IAAK,GACLC,SAAU,M,EAGdL,kBAAoB,SAACpD,GACnB,OAAKA,EAAMyB,OACJzB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACf,+BACE,6BAAKD,EAAKZ,OACV,6BAAKY,EAAKa,WACV,6BAAKb,EAAKc,YACV,6BAAKd,EAAKe,eACV,6BAAKf,EAAKgB,eACV,6BAAKhB,EAAKiB,SACV,6BAAKjB,EAAKkB,WACV,6BAAKlB,EAAKmB,aACV,6BAAKnB,EAAKoB,SACV,6BAAKpB,EAAKqB,cACV,6BAAKrB,EAAKsB,qBACV,6BAAKtB,EAAKuB,gBACV,6BACA,qBAAKnB,UAAU,aAAf,SAEA,uBACIC,KAAK,SACLjB,KAAK,WACLmD,IAAI,IACJC,KAAK,IACLlC,YAAY,IACZjB,MAAS,EAAKnB,MAAM2D,IAAI5B,IAAU,GAClCM,SAAU,SAAChB,GAAD,OAAW,EAAKL,aAAaK,EAAOU,YAvB3CA,MAFe,M,kDA7D5B,SAAaV,EAAOU,GAGlB,IAAIwC,EAAK,YAAOvC,KAAKhC,MAAM2D,KACvBa,EAAI,eAAOD,EAAMxC,IACrByC,EAAOnD,EAAMJ,OAAOE,MACpBoD,EAAMxC,GAAOyC,EACbxC,KAAKrB,SAAS,CAACgD,IAAIY,M,oBA6FrB,WAGE,OAFA3D,QAAQC,IAAI,UAAWmB,KAAKhC,OAGhC,qBAAKkC,UAAU,iBAAf,SACE,uBAAMD,SAAUD,KAAKZ,OAArB,UACE,kCACI,gCACI,+BACI,sCACA,0CACA,2CACA,8CACA,8CACA,wCACA,0CACA,4CACA,wCACA,6CACA,oDACA,qDAGR,gCACGY,KAAKuB,kBAAkBvB,KAAKhC,MAAMG,YAGzC,qD,GAzKWqC,IAAMC,WA+KViD,I,eCtJAS,E,kDAnBb,aAAe,wC,0CAGf,WACE,OACA,cAAC,IAAD,UACE,qBAAKjE,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAM,IAAKC,UAAWvG,IACnC,cAAC,IAAD,CAAOsG,KAAM,cAAeC,UAAW5D,IAEvC,cAAC,IAAD,CAAO2D,KAAM,gBAAiBC,UAAW5C,IACzC,cAAC,IAAD,CAAO2C,KAAM,QAASC,UAAWZ,IACjC,cAAC,IAAD,CAAOW,KAAM,UAAWC,UAAW7B,e,GAd3BjC,IAAMC,WCKT8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5afcf78a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nclass Home extends React.Component {\r\n    state = {\r\n        title: '',\r\n        body: '',\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getBlogPost();\r\n      };\r\n    \r\n      getBlogPost = () => {\r\n        axios.get('/api')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({posts:data});\r\n          console.log(\"Data is: \" + data);\r\n          console.log('Data has been received!!!');\r\n        })\r\n        .catch(() => {\r\n          alert('Error retrieving data!!!');\r\n        });\r\n      }\r\n    \r\n      //handleChange = (event) => {\r\n        //const target = event.target;\r\n        //const name = target.name;\r\n        //const value = target.value;\r\n      handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      };\r\n      submit = (event) => {\r\n        event.preventDefault();\r\n        const payload = {\r\n          title: this.state.title,\r\n          body: this.state.body\r\n        };\r\n    \r\n        axios({\r\n          url: '/api/save',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n        .then(() => {\r\n          console.log('Data has been sent to the server');\r\n          this.resetUserInputs();\r\n          this.getBlogPost();\r\n        })\r\n        .catch(() => {\r\n          console.log('Internal server error');\r\n        });;\r\n    \r\n    \r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          title: '',\r\n          body: ''\r\n        })\r\n      }\r\n    \r\n      displayBlogPost = (posts) => {\r\n        if (!posts.length) return null;\r\n        return posts.map((post, index) => (\r\n          <div key={index}>\r\n            <h3>{post.title}</h3>\r\n            <p>{post.body}</p>\r\n          </div>\r\n        ));\r\n      };\r\n    \r\n      render() {\r\n        console.log('State: ', this.state)\r\n        //JSX\r\n        return(\r\n          <div>\r\n            <h2>Welcome to my App</h2>\r\n            <form onSubmit={this.submit}>\r\n              <div className=\"form-input\">\r\n                <input \r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                <textarea \r\n                placeholder=\"body\" \r\n                name=\"body\" \r\n                cols=\"30\" \r\n                rows=\"10\" \r\n                value={this.state.body} \r\n                onChange={this.handleChange}>\r\n              </textarea>\r\n              </div>\r\n              <button>Submit</button>\r\n            </form>\r\n              <div className=\"blog-post\">\r\n                {this.displayBlogPost(this.state.posts)}\r\n              </div>\r\n          </div> \r\n        );\r\n      };\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport axios from 'axios';\r\nclass Combatants extends React.Component {\r\n    state = {\r\n        name: '',\r\n        strength: 0,\r\n        dexterity: 0,\r\n        constitution: 0,\r\n        intelligence: 0,\r\n        wisdom: 0,\r\n        charisma: 0,\r\n        initiative: 0,\r\n        max_hp: 0,\r\n        armor_class: 0,\r\n        passive_perception: 0,\r\n        combatantType: '',\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        //hello\r\n        this.getCombatant();\r\n      };\r\n    \r\n      getCombatant = () => {\r\n        axios.get('/api/combatantsList')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({posts:data});\r\n          console.log(\"Data is: \" + data);\r\n          console.log('Data has been received!!!');\r\n        })\r\n        .catch(() => {\r\n          alert('Error retrieving data!!!');\r\n        });\r\n      }\r\n    \r\n      handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      };\r\n      handleRadioButton(value) {\r\n        this.setState({\r\n          combatantType: value\r\n        });\r\n      }\r\n      submit = (event) => {\r\n        event.preventDefault();\r\n        const payload = {\r\n          name: this.state.name,\r\n          strength: this.state.strength,\r\n          dexterity: this.state.dexterity,\r\n          constitution: this.state.constitution,\r\n          intelligence: this.state.intelligence,\r\n          wisdom: this.state.wisdom,\r\n          charisma: this.state.charisma,\r\n          initiative: this.state.initiative,\r\n          max_hp: this.state.max_hp,\r\n          armor_class: this.state.armor_class,\r\n          passive_perception: this.state.passive_perception,\r\n          combatantType: this.state.combatantType\r\n        };\r\n    \r\n        axios({\r\n          url: '/api/combatantSave',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n        .then(() => {\r\n          console.log('Data has been sent to the server');\r\n          this.resetUserInputs();\r\n          this.getCombatant();\r\n        })\r\n        .catch(() => {\r\n          console.log('Internal server error');\r\n        });\r\n    \r\n    \r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n            name: '',\r\n            strength: 0,\r\n            dexterity: 0,\r\n            constitution: 0,\r\n            intelligence: 0,\r\n            wisdom: 0,\r\n            charisma: 0,\r\n            initiative: 0,\r\n            max_hp: 0,\r\n            armor_class: 0,\r\n            passive_perception: 0,\r\n            combatantType: ''\r\n        })\r\n      }\r\n    \r\n      displayCombatants = (posts) => {\r\n        if (!posts.length) return null;\r\n        return posts.map((post, index) => (\r\n          <div key={index}>\r\n            <h3>Name: {post.name}</h3>\r\n            <p>Strength: {post.strength}</p>\r\n            <p>Dexterity: {post.dexterity}</p>\r\n            <p>Constitution: {post.constitution}</p>\r\n            <p>Intelligence: {post.intelligence}</p>\r\n            <p>Wisdom: {post.wisdom}</p>\r\n            <p>Charisma: {post.charisma}</p>\r\n            <p>Initiative: {post.initiative}</p>\r\n            <p>Max HP: {post.max_hp}</p>\r\n            <p>Armor Class: {post.armor_class}</p>\r\n            <p>Passive Perception: {post.passive_perception}</p>\r\n            <p>Combatant Type: {post.combatantType}</p>\r\n          </div>\r\n        ));\r\n      };\r\n    \r\n      render() {\r\n        console.log('State: ', this.state)\r\n        //JSX\r\n        return(\r\n          <div>\r\n            <h2>Add a new Combatant</h2>\r\n            <form onSubmit={this.submit}>\r\n              <div className=\"form-input\">\r\n                Name: <input \r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Strength: <input \r\n                type=\"number\"\r\n                name=\"strength\"\r\n                placeholder=\"Strength\"\r\n                value={this.state.strength}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Dexterity: <input \r\n                type=\"number\"\r\n                name=\"dexterity\"\r\n                placeholder=\"Dexterity\"\r\n                value={this.state.dexterity}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Constitution: <input \r\n                type=\"number\"\r\n                name=\"constitution\"\r\n                placeholder=\"Constitution\"\r\n                value={this.state.constitution}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Intelligence: <input \r\n                type=\"number\"\r\n                name=\"intelligence\"\r\n                placeholder=\"Intelligence\"\r\n                value={this.state.intelligence}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Wisdom: <input \r\n                type=\"number\"\r\n                name=\"wisdom\"\r\n                placeholder=\"Wisdom\"\r\n                value={this.state.wisdom}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Charisma: <input \r\n                type=\"number\"\r\n                name=\"charisma\"\r\n                placeholder=\"Charisma\"\r\n                value={this.state.charisma}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Initiiative: <input \r\n                type=\"number\"\r\n                name=\"initiative\"\r\n                placeholder=\"Initiative\"\r\n                value={this.state.initiative}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Max HP: <input \r\n                type=\"number\"\r\n                name=\"max_hp\"\r\n                placeholder=\"Max HP\"\r\n                value={this.state.max_hp}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Armor Class: <input \r\n                type=\"number\"\r\n                name=\"armor_class\"\r\n                placeholder=\"Armor Class\"\r\n                value={this.state.armor_class}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                Passive Perception: <input \r\n                type=\"number\"\r\n                name=\"passive_perception\"\r\n                placeholder=\"Passive Perception\"\r\n                value={this.state.passive_perception}\r\n                onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"radio\">\r\n                  <label>\r\n                      <input\r\n                      type=\"radio\"\r\n                      value={this.state.combatantType}\r\n                      checked={this.state.combatantType === 'Player'}\r\n                      onChange={() => this.handleRadioButton('Player')}\r\n                      />\r\n                      Player\r\n                  </label>\r\n              </div>\r\n              <div className=\"radio\">\r\n                  <label>\r\n                      <input\r\n                      type=\"radio\"\r\n                      value={this.state.combatantType}\r\n                      checked={this.state.combatantType === 'Monster'}\r\n                      onChange={() => this.handleRadioButton('Monster')}\r\n                      />\r\n                      Monster\r\n                  </label>\r\n              </div>\r\n              <button>Submit</button>\r\n            </form>\r\n              <div className=\"combatants\">\r\n                {this.displayCombatants(this.state.posts)}\r\n              </div>\r\n          </div> \r\n        );\r\n      };\r\n}\r\nexport default Combatants;","import React from \"react\";\r\nimport axios from 'axios';\r\nclass CombatSelect extends React.Component {\r\n    \r\n    state = {\r\n        num: [],\r\n        fighters: [],\r\n        posts: [],\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getCombatant();\r\n      };\r\n    \r\n      \r\n      getCombatant = () => {\r\n        axios.get('/api/combatantsList')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({posts:data});\r\n          for (var i = 0; i < this.state.posts.length; i++) {\r\n            this.state.num.push(0);\r\n          }\r\n          console.log('Data has been received!!!');\r\n        })\r\n        .catch(() => {\r\n          alert('Error retrieving data!!!');\r\n        });\r\n      };\r\n\r\n      handleChange(event, index) {\r\n        //console.log(\"event is \"+event.target.value)\r\n        //console.log(\"index is\"+index)\r\n        let items = [...this.state.num];\r\n        let item = {...items[index]};\r\n        item = event.target.value;\r\n        items[index]=item;\r\n        this.setState({num:items});\r\n      };\r\n\r\n      submit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.num);\r\n        for (var i = 0; i < this.state.posts.length; i++) {\r\n          if(this.state.num[i] > 0) {\r\n            for (var k = 0; k < this.state.num[i]; k++) {\r\n              this.state.fighters.push(this.state.posts[i]);\r\n            }\r\n          }\r\n        }\r\n        const payload = {\r\n          fighters: this.state.fighters\r\n        };\r\n        \r\n        axios({\r\n          url: '/api/battleSave',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n        .then((response) => {\r\n          window.location.href = response.data.redirect + `${response.data._id}`;\r\n          console.log('Data has been sent to the server');\r\n          //this.resetUserInputs();\r\n          //this.getCombatant();\r\n        })\r\n        .catch(() => {\r\n          console.log('Internal server error');\r\n        });\r\n    \r\n    \r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          num: [],\r\n          fighters: []\r\n        })\r\n      };\r\n      displayCombatants = (posts) => {\r\n        if (!posts.length) return null;\r\n        return posts.map((post, index) => (\r\n          <tr key={index}>\r\n            <td>{post.name}</td>\r\n            <td>{post.strength}</td>\r\n            <td>{post.dexterity}</td>\r\n            <td>{post.constitution}</td>\r\n            <td>{post.intelligence}</td>\r\n            <td>{post.wisdom}</td>\r\n            <td>{post.charisma}</td>\r\n            <td>{post.initiative}</td>\r\n            <td>{post.max_hp}</td>\r\n            <td>{post.armor_class}</td>\r\n            <td>{post.passive_perception}</td>\r\n            <td>{post.combatantType}</td>\r\n            <td>\r\n              <div className=\"form-input\">\r\n                <input \r\n                  type=\"number\" \r\n                  name='selected'\r\n                  min=\"1\" \r\n                  step=\"1\" \r\n                  placeholder=\"5\"\r\n                  value = {this.state.num[index] || ''}\r\n                  onChange={(event) => this.handleChange(event, index)}\r\n                />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ));\r\n      };\r\n      // <td class=\"actions\">\r\n      //         <a a href=\"combatants/view?_id={{ this._id }}\"><button  type=\"button\" class=\"btn btn-primary\">View</button></a>\r\n\t\t  //       </td>\r\n\r\n      render() {\r\n        console.log('State: ', this.state)\r\n        //JSX\r\n        return(\r\n    <div className=\"combat-container\">\r\n      <form onSubmit={this.submit}>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Strength</th>\r\n                    <th>Dexterity</th>\r\n                    <th>Constitution</th>\r\n                    <th>Intelligence</th>\r\n                    <th>Wisdom</th>\r\n                    <th>Charisma</th>\r\n                    <th>Initiative</th>\r\n                    <th>Max HP</th>\r\n                    <th>Armor Class</th>\r\n                    <th>Passive Perception</th>\r\n                    <th>Combatant Type</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.displayCombatants(this.state.posts)}\r\n            </tbody>\r\n        </table>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n        );\r\n      };\r\n}\r\nexport default CombatSelect;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { useState } from \"react\";\r\nclass Combat extends React.Component {\r\n    \r\n    state = {\r\n        num: [],\r\n        fighters: [],\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getBattle();\r\n      };\r\n    \r\n      \r\n      getBattle = () => {\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const IDFromURL = Object.fromEntries(params.entries());\r\n        axios.get('/api/battle', {\r\n            params: {\r\n                _id: IDFromURL._id\r\n            }\r\n        })\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({posts:data});\r\n          this.setState({fighters:data.fighters});\r\n\r\n          console.log(this.state.posts);\r\n          console.log(this.state.fighters);\r\n\r\n          var tempArray = this.state.fighters;\r\n          this.setState({fighters:tempArray.sort((firstItem, secondItem) => secondItem.roll - firstItem.roll)});\r\n          for (var i = 0; i < this.state.posts.length; i++) {\r\n            this.state.num.push(0);\r\n          }\r\n          console.log('Data has been received!!!');\r\n        })\r\n        .catch(() => {\r\n          alert('Error retrieving data!!!');\r\n        });\r\n      };\r\n\r\n      handleChange(event, index) {\r\n        //console.log(\"event is \"+event.target.value)\r\n        //console.log(\"index is\"+index)\r\n        let items = [...this.state.num];\r\n        let item = {...items[index]};\r\n        item = event.target.value;\r\n        items[index]=item;\r\n        this.setState({num:items});\r\n      };\r\n\r\n      submit = (event) => {\r\n        event.preventDefault();\r\n        //console.log(event.target);\r\n        for (var i = 0; i < this.state.posts.length; i++) {\r\n          if(this.state.num[i] > 0) {\r\n            for (var k = 0; k < this.state.num[i]; k++) {\r\n              this.state.fighters.push(this.state.posts[i]);\r\n            }\r\n          }\r\n        }\r\n        const payload = {\r\n          fighters: this.state.fighters\r\n        };\r\n    \r\n        axios({\r\n          url: '/api/battleSave',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n        .then(() => {\r\n          console.log('Data has been sent to the server');\r\n          this.resetUserInputs();\r\n          this.getCombatant();\r\n        })\r\n        .catch(() => {\r\n          console.log('Internal server error');\r\n        });\r\n    \r\n    \r\n      };\r\n\r\n      spacePress = (event) => {\r\n        event.preventDefault();\r\n\r\n      }\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          num: [],\r\n          fighters: []\r\n        })\r\n      };\r\n      displayCombatants = (posts) => {\r\n        if (!posts.length) return null;\r\n        return posts.map((post, index) => (\r\n          <tr key={index}  onKeyPress={this.spacePress}>\r\n            <td>{post.name}</td>\r\n            <td>{post.roll}</td>\r\n          </tr>\r\n        ));\r\n      };\r\n      // <td class=\"actions\">\r\n      //         <a a href=\"combatants/view?_id={{ this._id }}\"><button  type=\"button\" class=\"btn btn-primary\">View</button></a>\r\n\t\t  //       </td>\r\n\r\n      render() {\r\n        console.log('State: ', this.state)\r\n        //JSX\r\n        return(\r\n    <div className=\"combat-container\">\r\n      <form>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Initiative</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.displayCombatants(this.state.fighters)}\r\n            </tbody>\r\n        </table>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n        );\r\n      };\r\n}\r\nexport default Combat;","import React from \"react\";\r\nimport axios from 'axios';\r\nclass Roll extends React.Component {\r\n    \r\n    state = {\r\n        num: [],\r\n        fighters: [],\r\n        posts: [],\r\n        auto: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getRoll();\r\n      };\r\n    \r\n      \r\n      getRoll = () => {\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const IDFromURL = Object.fromEntries(params.entries());\r\n        axios.get('/api/roll', {\r\n        params: {\r\n            _id: IDFromURL._id\r\n        }})\r\n        .then((response) => {\r\n        const data = response.data;\r\n          this.setState({posts:data.fighters});\r\n          console.log(this.state.posts);\r\n          for (var i = 0; i < this.state.posts.length; i++) {\r\n            this.state.num.push(0);\r\n            if(this.state.posts[i].combatantType === 'monster') {\r\n                this.state.auto.push(false);\r\n            } else {\r\n                this.state.auto.push(true);\r\n            }\r\n          }\r\n          console.log(this.state.auto);\r\n          console.log('Data has been received!!!');\r\n        })\r\n        // .catch(() => {\r\n        //   alert('Error retrieving data!!!');\r\n        // });\r\n      };\r\n\r\n      handleChange(event, index) {\r\n        //console.log(\"event is \"+event.target.value)\r\n        //console.log(\"index is\"+index)\r\n        let items = [...this.state.num];\r\n        let item = {...items[index]};\r\n        item = event.target.value;\r\n        items[index]=item;\r\n        this.setState({num:items});\r\n      };\r\n\r\n      submit = (event) => {\r\n        event.preventDefault();\r\n        for (var i = 0; i < this.state.posts.length; i++) {\r\n            if (this.state.num[i] > 0) {\r\n                this.state.fighters.push({\r\n                    fighter_id: this.state.posts[i]._id,\r\n                    name: this.state.posts[i].name,\r\n                    roll: Number(this.state.num[i])\r\n                })\r\n            } else {\r\n                var roll = this.state.posts[i].initiative + Math.floor(Math.random() *20) + 1;\r\n                this.state.fighters.push({\r\n                    fighter_id: this.state.posts[i]._id,\r\n                    name: this.state.posts[i].name,\r\n                    roll: roll\r\n                })  \r\n            }\r\n\r\n        }\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const IDFromURL = Object.fromEntries(params.entries());\r\n        const payload = {\r\n            fighters: this.state.fighters,\r\n            battle_id: IDFromURL._id\r\n        };\r\n\r\n        axios({\r\n          url: '/api/rollSave',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n        .then((response) => {\r\n            window.location.href = response.data.redirect + `${response.data._id}`;\r\n          console.log('Data has been sent to the server');\r\n          //this.resetUserInputs();\r\n          //this.getRoll();\r\n        })\r\n        .catch(() => {\r\n          console.log('Internal server error');\r\n        });\r\n    \r\n    \r\n      };\r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          num: [],\r\n          fighters: []\r\n        })\r\n      };\r\n      displayCombatants = (posts) => {\r\n        if (!posts.length) return null;\r\n        return posts.map((post, index) => (\r\n          <tr key={index}>\r\n            <td>{post.name}</td>\r\n            <td>{post.strength}</td>\r\n            <td>{post.dexterity}</td>\r\n            <td>{post.constitution}</td>\r\n            <td>{post.intelligence}</td>\r\n            <td>{post.wisdom}</td>\r\n            <td>{post.charisma}</td>\r\n            <td>{post.initiative}</td>\r\n            <td>{post.max_hp}</td>\r\n            <td>{post.armor_class}</td>\r\n            <td>{post.passive_perception}</td>\r\n            <td>{post.combatantType}</td>\r\n            <td>\r\n            <div className=\"form-input\">\r\n                {/* { this.state.auto[index] ? ( */}\r\n            <input\r\n                type=\"number\" \r\n                name='selected'\r\n                min=\"1\" \r\n                step=\"1\" \r\n                placeholder=\"5\"\r\n                value = {this.state.num[index] || ''}\r\n                onChange={(event) => this.handleChange(event, index)}\r\n            /> \r\n            {/* ) : (\r\n                 <div>auto</div>\r\n             )} */}\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        ));\r\n      };\r\n      // <td class=\"actions\">\r\n      //         <a a href=\"combatants/view?_id={{ this._id }}\"><button  type=\"button\" class=\"btn btn-primary\">View</button></a>\r\n\t\t  //       </td>\r\n\r\n      render() {\r\n        console.log('State: ', this.state)\r\n        //JSX\r\n        return(\r\n    <div className=\"roll-container\">\r\n      <form onSubmit={this.submit}>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Strength</th>\r\n                    <th>Dexterity</th>\r\n                    <th>Constitution</th>\r\n                    <th>Intelligence</th>\r\n                    <th>Wisdom</th>\r\n                    <th>Charisma</th>\r\n                    <th>Initiative</th>\r\n                    <th>Max HP</th>\r\n                    <th>Armor Class</th>\r\n                    <th>Passive Perception</th>\r\n                    <th>Combatant Type</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.displayCombatants(this.state.posts)}\r\n            </tbody>\r\n        </table>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n        );\r\n      };\r\n}\r\nexport default Roll;","import React from 'react';\nimport Home from \"./components/Home\";\nimport Combatants from \"./components/Combatants\";\nimport CombatSelect from './components/CombatSelect';\nimport Combat from './components/Combat';\nimport Roll from './components/Roll';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nclass App extends React.Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path={\"/\"} component={Home}/>\n          <Route path={\"/combatants\"} component={Combatants}/>\n          {/* <Route path=\"/combatselect\" render={(props) => <Roll {...props}/>}/> */}\n          <Route path={\"/combatselect\"} component={CombatSelect}/>\n          <Route path={\"/roll\"} component={Roll}/>\n          <Route path={\"/battle\"} component={Combat}/>\n        </Switch>\n      </div>\n    </Router>\n    )}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}